#!/bin/bash

[ -z "$PS1" ] && return
echo "Initializing interactive bash configuration"
echo "Sourcing shrc configuration"
source "$KONIX_CONFIG_DIR/shrc"
echo "$PPID" > ~/.bash_ppid
source "$KONIX_LIB_DIR/soblib.sh"
# Use emacs key bindings
set -o emacs

# make less more friendly for non-text input files
LESSPIPE="$(which lesspipe)"
[ -e "$LESSFILE" -a -x "$LESSFILE" ] && eval "$(lesspipe)"

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007"'
    ;;
*)
    ;;
esac

# ################################################################################
# Others
# ################################################################################
# ************************************************************
# Bash Comp
# ************************************************************
if [ -f /etc/bash_completion ]; then
    echo "Loading bash completion from etc"
    . /etc/bash_completion
fi

if [ -f /etc/profile.d/bash-completion.sh ]; then
    echo "Loading bash completion from etc/profile.d"
    . /etc/profile.d/bash-completion.sh
fi

# source custom bash completions
OLD_IFS=$IFS
IFS=$'\n'
echo "Loading personal bash completions"
source "$KONIX_CONFIG_DIR/bash_completion"

# special case for notmuch completion
if [ -f "$KONIX_DEVEL_DIR/notmuch/completion/notmuch-completion.bash" ]
then
    source "$KONIX_DEVEL_DIR/notmuch/completion/notmuch-completion.bash"
fi

IFS=$OLD_IFS

# unset bash bmajor bminor

# do not generate a core dump by default to avoid dissemineting core dumps everywhere
# ulimit -c 209715200

# use the autocd feature to gain precious miliseconds
shopt -s autocd

# ######################################################################
# For a nice git prompt
# ######################################################################
if [ -e "${KONIX_DEVEL_DIR}/sjoubert_dot_rc/.config/bash/git" ]
then
    echo "Loading sjoubert git config"
    source "${KONIX_DEVEL_DIR}/sjoubert_dot_rc/.config/bash/git"
    KONIX_GIT_PROMPT_SOURCED=1
fi

# Source the smartcd package if available
if [ -e "$HOME/.smartcd_config" ]
then
        echo "Loading smartcd"
        source "$HOME/.smartcd_config"
fi

# ************************************************************
# Variables
# ************************************************************
# Le prompt, joli et en couleur
#set -x
konix_string_to_color_index "$HOSTNAME"
konix_int_to_color "$RES" 0
HOST_COLOR="$RES"
konix_string_to_color_index "$LOGNAME"
konix_int_to_color "$RES" 0
LOGNAME_COLOR="$RES"
konix_int_to_color "$((COLOR_GREEN + 8))" "$COLOR_BLACK"
GIT_COLOR="$RES"
konix_int_to_color -1 -1
DEFAULT_COLOR="$RES"
konix_int_to_color $((COLOR_RED+8)) -1
BAD_PROMPT_COLOR="$RES"
konix_int_to_color $((COLOR_GREEN+8)) -1
GOOD_PROMPT_COLOR="$RES"
konix_git_prompt_maybe ( ) {
    if [ -n "$KONIX_GIT_PROMPT_SOURCED" \
        -a -n "$KONIX_GIT_PROMPT" ]
    then
        git_prompt
    fi
}

konix_prompt_pre ( ) {
echo -n
}
konix_prompt_post ( ) {
echo -n
}

PATH_COLOR="${COLOR_FG_CYAN}${COLOR_BOLD}${COLOR_BG_BLACK}"
if [ -n "${KONIX_BASH_PRIVATE_NAV}" ]
then
	echo "Private navigation"
	unset HISTFILE
	PATH_COLOR="${COLOR_FG_RED}${COLOR_BOLD}${COLOR_BG_BLACK}"
fi

#set +x
export PS1="\$(rc=\$? ; konix_prompt_pre; [ \$rc -ne 0 ] && printf \"\[$BAD_PROMPT_COLOR\]\" || printf \"\[$GOOD_PROMPT_COLOR\]\" ; printf \"%03d$DEFAULT_COLOR\" \$rc ;)\[$LOGNAME_COLOR\]\u\[\033[01;33;40m\]@\[$HOST_COLOR\]\h\[\033[00m\]$PATH_COLOR|path=\w|\[\033[00m\]${GIT_COLOR}\$(konix_git_prompt_maybe)${DEFAULT_COLOR} \$(date \"+%H:%M:%S - %d/%m/%y\")\$(konix_prompt_post)\n\$ "
