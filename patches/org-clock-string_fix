Made use of org-clock-string when needed.

Avoided the hard coding of "CLOCK:"
Index: devel/config/elfiles/org/lisp/org-clock.el
===================================================================
--- devel.orig/config/elfiles/org/lisp/org-clock.el	2013-11-18 09:38:17.356321996 +0100
+++ devel/config/elfiles/org/lisp/org-clock.el	2013-11-18 09:38:17.344322047 +0100
@@ -779,7 +779,7 @@
     (with-current-buffer buf
       (save-excursion
 	(goto-char (point-min))
-	(while (re-search-forward "CLOCK: \\(\\[.*?\\]\\)$" nil t)
+	(while (re-search-forward (concat org-clock-string " \\(\\[.*?\\]\\)$") nil t)
 	  (push (cons (copy-marker (match-end 1) t)
 		      (org-time-string-to-time (match-string 1))) clocks))))
     clocks))
Index: devel/config/elfiles/org/lisp/org.el
===================================================================
--- devel.orig/config/elfiles/org/lisp/org.el	2013-11-18 09:38:17.356321996 +0100
+++ devel/config/elfiles/org/lisp/org.el	2013-11-18 09:38:17.352322013 +0100
@@ -8559,7 +8559,8 @@
 			    (org-entry-delete nil "ID")
 			  (org-id-get-create t)))
 	    (unless (= n 0)
-	      (while (re-search-forward "^[ \t]*CLOCK:.*$" nil t)
+	      (while (re-search-forward
+		      (format "^[ \t]*%s.*$" org-clock-string) nil t)
 		(kill-whole-line))
 	      (goto-char (point-min))
 	      (while (re-search-forward drawer-re nil t)
@@ -15649,8 +15650,13 @@
     (setq hiddenp (outline-invisible-p))
     (end-of-line 1)
     (and (equal (char-after) ?\n) (forward-char 1))
-    (while (looking-at "^[ \t]*\\(:CLOCK:\\|:LOGBOOK:\\|CLOCK:\\|:END:\\)")
-      (if (member (match-string 1) '("CLOCK:" ":END:"))
+    (while (looking-at
+	    (format
+	     "^[ \t]*\\(:CLOCK:\\|:LOGBOOK:\\|%s\\|:END:\\)"
+	     org-clock-string))
+      (if (member (match-string 1)
+		  (list org-clock-string ":END:")
+		  )
 	  ;; just skip this line
 	  (beginning-of-line 2)
 	;; Drawer start, find the end
@@ -17343,7 +17349,9 @@
   "Is the cursor on the clock log line?"
   (save-excursion
     (move-beginning-of-line 1)
-    (looking-at "^[ \t]*CLOCK:")))
+    (looking-at
+     (concat "^[ \t]*" org-clock-string)
+     )))
 
 (defvar org-clock-history)                     ; defined in org-clock.el
 (defvar org-clock-adjust-closest nil)          ; defined in org-clock.el
